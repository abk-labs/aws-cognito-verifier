version: 2
jobs:
  build:
    working_directory: ~/verifications
    docker:
      - image: circleci/node:8.11-stretch
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test
      - run: zip -r lambda.zip main.js node_modules package.json
      - persist_to_workspace:
          root: ~/verifications
          paths:
            - lambda.zip
  deploy-dev:
    working_directory: ~/verifications
    docker:
      - image: cgswong/aws:latest
    steps:
      - attach_workspace:
          at: ~/verifications
      - run: aws s3 cp lambda.zip s3://api.dev.espinoladesigns.com/lambda-verifications-dev-${CIRCLE_SHA1}.zip
      - run: aws lambda update-function-code --function-name VerificationsDevFnc --s3-key lambda-verifications-prod-${CIRCLE_SHA1}.zip --s3-bucket api.dev.espinoladesigns.com
      - run: aws apigateway create-deployment --rest-api-id "4g46qmn0ji" --stage-name dev --description "Deployment - ${CIRCLE_SHA1}"
  deploy-prod:
    working_directory: ~/verifications
    docker:
      - image: cgswong/aws:latest
    steps:
      - attach_workspace:
          at: ~/verifications
      - run: aws s3 cp lambda.zip s3://api.espinoladesigns.com/lambda-verifications-prod-${CIRCLE_SHA1}.zip
      - run: aws lambda update-function-code --function-name VerificationsProdFnc --s3-key lambda-verifications-prod-${CIRCLE_SHA1}.zip --s3-bucket api.espinoladesigns.com
      - run: aws apigateway create-deployment --rest-api-id "4g46qmn0ji" --stage-name prod --description "Deployment - ${CIRCLE_SHA1}"
workflows:
  version: 2
  tbd:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: dev
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master
